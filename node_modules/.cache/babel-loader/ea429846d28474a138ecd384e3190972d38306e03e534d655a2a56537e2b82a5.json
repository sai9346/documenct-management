{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useDocuments.ts\nimport { useState, useCallback } from 'react';\nimport { api } from '../services/api';\nexport const useDocuments = userId => {\n  _s();\n  const [documents, setDocuments] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [total, setTotal] = useState(0);\n  const fetchDocuments = useCallback(async (isPublic, search = '', page = 1) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const result = await api.getDocuments(userId, isPublic, search, page);\n      setDocuments(result.documents);\n      setTotal(result.total);\n    } catch (err) {\n      setError('Failed to fetch documents');\n    } finally {\n      setLoading(false);\n    }\n  }, [userId]);\n  const uploadDocuments = useCallback(async (files, isPublic) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const newDocuments = await api.uploadDocuments(files, isPublic, userId);\n      setDocuments(prev => [...newDocuments, ...prev]);\n    } catch (err) {\n      setError('Failed to upload documents');\n    } finally {\n      setLoading(false);\n    }\n  }, [userId]);\n  return {\n    documents,\n    loading,\n    error,\n    total,\n    fetchDocuments,\n    uploadDocuments\n  };\n};\n_s(useDocuments, \"FDv3IjF4NrHRkfX+xHiWSKgCdcQ=\");","map":{"version":3,"names":["useState","useCallback","api","useDocuments","userId","_s","documents","setDocuments","loading","setLoading","error","setError","total","setTotal","fetchDocuments","isPublic","search","page","result","getDocuments","err","uploadDocuments","files","newDocuments","prev"],"sources":["D:/Nxtwave/solace/document-management/src/hooks/useDocuments.ts"],"sourcesContent":["// src/hooks/useDocuments.ts\r\nimport { useState, useCallback } from 'react';\r\nimport { Document } from '../types/Document';\r\nimport { api } from '../services/api';\r\n\r\nexport const useDocuments = (userId: string) => {\r\n  const [documents, setDocuments] = useState<Document[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const fetchDocuments = useCallback(async (isPublic: boolean, search: string = '', page: number = 1) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const result = await api.getDocuments(userId, isPublic, search, page);\r\n      setDocuments(result.documents);\r\n      setTotal(result.total);\r\n    } catch (err) {\r\n      setError('Failed to fetch documents');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [userId]);\r\n\r\n  const uploadDocuments = useCallback(async (files: File[], isPublic: boolean) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const newDocuments = await api.uploadDocuments(files, isPublic, userId);\r\n      setDocuments(prev => [...newDocuments, ...prev]);\r\n    } catch (err) {\r\n      setError('Failed to upload documents');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [userId]);\r\n\r\n  return { documents, loading, error, total, fetchDocuments, uploadDocuments };\r\n};"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,SAASC,GAAG,QAAQ,iBAAiB;AAErC,OAAO,MAAMC,YAAY,GAAIC,MAAc,IAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAa,EAAE,CAAC;EAC1D,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMc,cAAc,GAAGb,WAAW,CAAC,OAAOc,QAAiB,EAAEC,MAAc,GAAG,EAAE,EAAEC,IAAY,GAAG,CAAC,KAAK;IACrGR,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMO,MAAM,GAAG,MAAMhB,GAAG,CAACiB,YAAY,CAACf,MAAM,EAAEW,QAAQ,EAAEC,MAAM,EAAEC,IAAI,CAAC;MACrEV,YAAY,CAACW,MAAM,CAACZ,SAAS,CAAC;MAC9BO,QAAQ,CAACK,MAAM,CAACN,KAAK,CAAC;IACxB,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZT,QAAQ,CAAC,2BAA2B,CAAC;IACvC,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EAEZ,MAAMiB,eAAe,GAAGpB,WAAW,CAAC,OAAOqB,KAAa,EAAEP,QAAiB,KAAK;IAC9EN,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMY,YAAY,GAAG,MAAMrB,GAAG,CAACmB,eAAe,CAACC,KAAK,EAAEP,QAAQ,EAAEX,MAAM,CAAC;MACvEG,YAAY,CAACiB,IAAI,IAAI,CAAC,GAAGD,YAAY,EAAE,GAAGC,IAAI,CAAC,CAAC;IAClD,CAAC,CAAC,OAAOJ,GAAG,EAAE;MACZT,QAAQ,CAAC,4BAA4B,CAAC;IACxC,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EAEZ,OAAO;IAAEE,SAAS;IAAEE,OAAO;IAAEE,KAAK;IAAEE,KAAK;IAAEE,cAAc;IAAEO;EAAgB,CAAC;AAC9E,CAAC;AAAChB,EAAA,CAlCWF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}