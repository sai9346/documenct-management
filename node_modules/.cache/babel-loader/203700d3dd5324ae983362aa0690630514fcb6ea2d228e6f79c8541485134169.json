{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nxtwave\\\\solace\\\\document-management\\\\src\\\\components\\\\DocumentUpload.tsx\",\n  _s = $RefreshSig$();\n// src/components/DocumentUpload.tsx\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadContainer = styled.div`\n  margin-bottom: 20px;\n`;\n_c = UploadContainer;\nconst UploadForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n_c2 = UploadForm;\nconst FileInput = styled.input`\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n`;\n_c3 = FileInput;\nconst PrivacyToggle = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n_c4 = PrivacyToggle;\nconst UploadButton = styled.button`\n  padding: 10px 20px;\n  font-size: 16px;\n  background-color: #28a745;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #218838;\n  }\n`;\n_c5 = UploadButton;\nexport const DocumentUpload = ({\n  onUpload\n}) => {\n  _s();\n  const [files, setFiles] = useState(null);\n  const [isPublic, setIsPublic] = useState(false);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (files) {\n      onUpload(Array.from(files), isPublic);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(UploadContainer, {\n    children: /*#__PURE__*/_jsxDEV(UploadForm, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FileInput, {\n        type: \"file\",\n        multiple: true,\n        onChange: e => setFiles(e.target.files)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrivacyToggle, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isPublic,\n          onChange: () => setIsPublic(!isPublic),\n          id: \"privacy-toggle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"privacy-toggle\",\n          children: \"Make documents public\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UploadButton, {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentUpload, \"MitUb6SnP6Peytkgzjl7LpUZ5pE=\");\n_c6 = DocumentUpload;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"UploadContainer\");\n$RefreshReg$(_c2, \"UploadForm\");\n$RefreshReg$(_c3, \"FileInput\");\n$RefreshReg$(_c4, \"PrivacyToggle\");\n$RefreshReg$(_c5, \"UploadButton\");\n$RefreshReg$(_c6, \"DocumentUpload\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","UploadContainer","div","_c","UploadForm","form","_c2","FileInput","input","_c3","PrivacyToggle","_c4","UploadButton","button","_c5","DocumentUpload","onUpload","_s","files","setFiles","isPublic","setIsPublic","handleSubmit","e","preventDefault","Array","from","children","onSubmit","type","multiple","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","checked","id","htmlFor","_c6","$RefreshReg$"],"sources":["D:/Nxtwave/solace/document-management/src/components/DocumentUpload.tsx"],"sourcesContent":["// src/components/DocumentUpload.tsx\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst UploadContainer = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst UploadForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n\r\nconst FileInput = styled.input`\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst PrivacyToggle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n\r\nconst UploadButton = styled.button`\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  background-color: #28a745;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #218838;\r\n  }\r\n`;\r\n\r\ninterface DocumentUploadProps {\r\n  onUpload: (files: File[], isPublic: boolean) => void;\r\n}\r\n\r\nexport const DocumentUpload: React.FC<DocumentUploadProps> = ({ onUpload }) => {\r\n  const [files, setFiles] = useState<FileList | null>(null);\r\n  const [isPublic, setIsPublic] = useState(false);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (files) {\r\n      onUpload(Array.from(files), isPublic);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <UploadContainer>\r\n      <UploadForm onSubmit={handleSubmit}>\r\n        <FileInput\r\n          type=\"file\"\r\n          multiple\r\n          onChange={(e) => setFiles(e.target.files)}\r\n        />\r\n        <PrivacyToggle>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isPublic}\r\n            onChange={() => setIsPublic(!isPublic)}\r\n            id=\"privacy-toggle\"\r\n          />\r\n          <label htmlFor=\"privacy-toggle\">Make documents public</label>\r\n        </PrivacyToggle>\r\n        <UploadButton type=\"submit\">Upload</UploadButton>\r\n      </UploadForm>\r\n    </UploadContainer>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}