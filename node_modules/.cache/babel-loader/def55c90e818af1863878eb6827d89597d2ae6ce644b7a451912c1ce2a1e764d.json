{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nxtwave\\\\solace\\\\document-management\\\\src\\\\components\\\\DocumentForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentForm = ({\n  onSubmit\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [isPublic, setIsPublic] = useState(true);\n  const handleFileChange = event => {\n    if (event.target.files) {\n      setFile(event.target.files[0]);\n    }\n  };\n  const handlePublicChange = event => {\n    setIsPublic(event.target.checked);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (file) {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('isPublic', isPublic.toString());\n      onSubmit(formData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isPublic,\n        onChange: handlePublicChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), \"Public\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentForm, \"JlTjwpBR2Ga+79I1jdiTJc2RbRY=\");\n_c = DocumentForm;\nexport default DocumentForm;\nvar _c;\n$RefreshReg$(_c, \"DocumentForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DocumentForm","onSubmit","_s","file","setFile","isPublic","setIsPublic","handleFileChange","event","target","files","handlePublicChange","checked","handleSubmit","preventDefault","formData","FormData","append","toString","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Nxtwave/solace/document-management/src/components/DocumentForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\ninterface DocumentFormProps {\r\n  onSubmit: (formData: FormData) => void;\r\n}\r\n\r\nconst DocumentForm: React.FC<DocumentFormProps> = ({ onSubmit }) => {\r\n  const [file, setFile] = useState<File | null>(null);\r\n  const [isPublic, setIsPublic] = useState<boolean>(true);\r\n\r\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.files) {\r\n      setFile(event.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handlePublicChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setIsPublic(event.target.checked);\r\n  };\r\n\r\n  const handleSubmit = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    if (file) {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n      formData.append('isPublic', isPublic.toString());\r\n      onSubmit(formData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <label>\r\n        <input type=\"checkbox\" checked={isPublic} onChange={handlePublicChange} />\r\n        Public\r\n      </label>\r\n      <button type=\"submit\">Upload</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default DocumentForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMxC,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAU,IAAI,CAAC;EAEvD,MAAMU,gBAAgB,GAAIC,KAA0C,IAAK;IACvE,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,EAAE;MACtBN,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAChC;EACF,CAAC;EAED,MAAMC,kBAAkB,GAAIH,KAA0C,IAAK;IACzEF,WAAW,CAACE,KAAK,CAACC,MAAM,CAACG,OAAO,CAAC;EACnC,CAAC;EAED,MAAMC,YAAY,GAAIL,KAAsB,IAAK;IAC/CA,KAAK,CAACM,cAAc,CAAC,CAAC;IACtB,IAAIX,IAAI,EAAE;MACR,MAAMY,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEd,IAAI,CAAC;MAC7BY,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEZ,QAAQ,CAACa,QAAQ,CAAC,CAAC,CAAC;MAChDjB,QAAQ,CAACc,QAAQ,CAAC;IACpB;EACF,CAAC;EAED,oBACEhB,OAAA;IAAME,QAAQ,EAAEY,YAAa;IAAAM,QAAA,gBAC3BpB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEd;IAAiB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjD1B,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAOqB,IAAI,EAAC,UAAU;QAACR,OAAO,EAAEP,QAAS;QAACgB,QAAQ,EAAEV;MAAmB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,UAE5E;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACR1B,OAAA;MAAQqB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAACvB,EAAA,CAlCIF,YAAyC;AAAA0B,EAAA,GAAzC1B,YAAyC;AAoC/C,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}